<자바스크립트의 실행>

내부 스크립트 방법
외부 스크립트 방법 

-> body tag 마지막 부분에 삽입하는게 좋음

특정 영역의 코드만 실행하는 법도 있음(드래그)

<변수>

암시적 선언 : 
명시적 선언 : var, let, const

var : 변수의 중복선언이 가능 -> 위험
let : 변수의 중복선언 불가
const : 변수의 중복선언 불가, 데이터 변경 불가 -> 상수


<변수 이름 짓기>
1. 변수 이름은 카멜케이스 방법으로 작성
2. 변수 이름은 _, $, 문자로만 시작
3. 상수나 축약어는 대문자와 스네이크케이스 방식으로 작성
4. 이미 사용하고 있는 예약어는 사용할 수 없음

<자료형>
원시타입 : 숫자, 문자열, 논리, null, undefined, Symbol
참조타입 : 배열, 객체, 함수

<숫자형>
js는 모든 형태의 수를 반영
출력할땐 모두 10진수형태로 출력

<문자열>
"" , '' 사용
", ' 동시사용 -> 이스케이프 문자 사용

<undefined, null>
-변수 선언하고 할당이 안되었을 시에는 자동으로 undefined 값이 자동으로 할당됨.
-사용자가 명시적으로 변수 공간이 비어있음을 저장해놓고 싶을때 null값 할당함


<bool자료형>
true / false

<array>

모든 자료형을 하나의 배열에 다 포함할 수 있음
인덱스를 활용하여 배열 참조 가능
let arr = [10,20]

<객체>
키 : 값  -> 속성
*키 이름을 문자열로 작성하면 공백이 있는 이름 사용이 가능
let obj = {number : 1};

접근방법
1. 대괄호 이용 
2. 점 사용

<함수>
연관된 코드들을 모아 놓은 자료형
*함수도 하나의 자료형임
1. 함수 선언식
function [함수명](){
    //code
}
2. 함수 표현식 
const [변수명] = function [함수명](){
    code
}
*함수 표현식은 변수의 이름으로만 호출가능
*함수 표현식의 함수는 이름을 지정하지 않아도 됨. 이름이 없는 함수 : 익명함수

*매개변수 : 함수의 변수
*인자 : 함수를 사용할때 넣는 변수

<return 키워드>
함수에서 반환 하는 값

<용어정리>
예약어/키워드 : js에서 이미 정의 되어 사용되고 있는 단어
식별자 : 변수명이나 함수명처럼 어떤 것들의 이름을 지어주는 것
연산자 : 연산기호
표현식 : 값으로 평가 될 수 있는 자바스크립트 구문